###
#
# **********************************************************************
# ORGANIZATION  :  Pi4J
# PROJECT       :  Pi4J :: The Pi4J Project
# FILENAME      :  .travis.yml
#
# This file is part of the Pi4J project. More information about
# this project can be found here:  https://pi4j.com/
# **********************************************************************
# %%
# Copyright (C) 2012 - 2020 Pi4J
# %%
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
###

# ----------------------------------------------------------------------------------
# This is a Java program with a minimum requirement of JDK8.
# This build should be performed on a Linux platform.
# ----------------------------------------------------------------------------------
language: java
jdk:
  - openjdk11
os:
  - linux
arch: 
  - arm64
dist: 
  - bionic

# ----------------------------------------------------------------------------------
# Only build master branch
# ----------------------------------------------------------------------------------
branches:
  only:
  - master

# ----------------------------------------------------------------------------------
# Before maven build, we need to setup cross-compiler environment for native
# gcc/make builds for ARM (ARMHF) & ARM64 (AARCH64) platforms. 
# ----------------------------------------------------------------------------------
install:
  - export PROJECT_DIR=$PWD
  - sudo apt-get update -qq
  - sudo apt-get install -qq --yes tree git build-essential file curl wget maven gcc
  - sudo apt-get --force-yes --yes install gcc-arm-linux-gnueabihf
  - cd $HOME
  - cd $PROJECT_DIR

# ----------------------------------------------------------------------------------
# Build the project including any native libraries
# ----------------------------------------------------------------------------------
script:
  - export JAVA_HOME=$(readlink -f /usr/bin/javac | sed "s:bin/javac::")
  - mvn clean install -Drelease-build
